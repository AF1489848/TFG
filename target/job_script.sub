#!/bin/bash -l

#SBATCH --job-name="AC-red"
#SBATCH -w stanlee
#SBATCH --exclusive
#SBATCH --time=1200:00:00
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=128
#SBATCH --output=stanlee-red-OUT-%j.log
#SBATCH --error=stanlee-red-ERR-%j.log

#module load gcc/7.3.0n
module load gcc/9.2.0
module load likwid/5.1.2
module load openmpi/3.0.4
module load conda

cd
source $HOME/.bashrc
source $HOME/tools/spack/share/spack/setup-env.sh
#spack load python arch=linux-centos7-sandybridge
spack load python arch=`spack arch`

#mkdir openmp
cd /home/suren/legacy_tools/stream_modified/amd_stanlee
#rm time.log
#Delete the existing directories
rm -r close_ctrs_stats 
rm -r spread_ctrs_stats
rm -r close_ctrs_threads
rm -r spread_ctrs_threads
rm -r close_metrics_stats
rm -r spread_metrics_stats
rm -r close_metrics_threads
rm -r spread_metrics_threads
rm -r close_raw
rm -r spread_raw
#Create the directories
mkdir close_ctrs_stats
mkdir spread_ctrs_stats
mkdir close_ctrs_threads
mkdir spread_ctrs_threads
mkdir close_metrics_stats
mkdir spread_metrics_stats
mkdir close_metrics_threads
mkdir spread_metrics_threads
mkdir close_raw
mkdir spread_raw
#Copy the 
cp $HOME/legacy_tools/scripts/join.py close_ctrs_stats/join.py
cp $HOME/legacy_tools/scripts/join.py spread_ctrs_stats/join.py
cp $HOME/legacy_tools/scripts/join-close-spread.py spread_ctrs_stats/join-close-spread.py
cp $HOME/legacy_tools/scripts/join-close-spread.py join-close-spread.py
cp $HOME/legacy_tools/scripts/Create_T_list.ipynb Create_T_list.ipynb
cp $HOME/legacy_tools/scripts/Create_T_list-Penguin-Modded-order.ipynb Create_T_list-Penguin-Modded-order.ipynb

#Modify this to the number of cores in your system, cores instead of threads.
#todo modify accordig to stanlee nums
#USE THIS FOR THE CLOSED CASE
export OMP_PLACES="{0},{8},{16},{24},{32},{40},{48},{56},{2},{10},{18},{26},{34},{42},{50},{58},{4},{12},{20},{28},{36},{44},{52},{60},{6},{14},{22},{30},{38},{46},{54},{62},{1},{9},{17},{25},{33},{41},{49},{57},{3},{11},{19},{27},{35},{43},{51},{59},{5},{13},{21},{29},{37},{45},{53},{61},{7},{15},{23},{31},{39},{47},{55},{63}"
export OMP_PROC_BIND=close
##Prova likwid
for tun in BRANCH #CACHE CLOCK CPI DATA DIVIDE ENERGY FLOPS_DP FLOPS_SP ICACHE L2 L3 MEM MEM_DP MEM_SP NUMA TLB
do
      echo $tun
      #Modify this to the number of cores in your system, cores instead of threads.
      #todo modify 1..64 instead
      for threads in null
      do
                echo $threads
                export OMP_NUM_THREADS=$threads

		#USE THESE SIZES FOR STANLEE
                #for size in 1024
                for size in null
                do
			echo $size
			export size=$size
                        echo "$tun $threads $size"
			gcc -llikwid -lm -fopenmp -pthread -o stream-likwid stream-likwid.c -O2 -DN=$size -DNTIMES=1 -DNTHREADS=$threads -DLIKWID_PERFMON -I /lex/software/LIBRARIES/likwid-5.2.1/include -L /lex/software/LIBRARIES/likwid-5.2.1/lib;	
			for kernel  in null 	
			do 
				for times in null
				do
				likwid-perfctr -g $tun -m -o data.csv -O ./stream-likwid $kernel
                		cat data.csv >> data_raw.csv 
				cat data.csv >> data_raw_threads.csv
				done

				python3 likwid_environment_counters_threads.py 
				cat data_ctrs_threads.csv >> ${threads}-data-O2-${size}_ctrs_threads.csv

				python3 likwid_environment_metrics_threads.py
				cat data_metrics_threads.csv >> ${threads}-data-O2-${size}_metrics_threads.csv	

				rm data_raw_threads.csv
				rm data_ctrs_threads.csv

			done
		python3 likwid_environment_counters_stats.py
		python3 likwid_environment_metrics_stats.py

		mv data_raw.csv ${threads}-data-O2-${size}_raw.csv #Create the raw datasets

		cat ${threads}-data-O2-${size}_ctrs_threads.csv >> data_ctrs_threads_header.csv
		mv data_ctrs_threads_header.csv ${threads}-data-O2-${size}_ctrs_threads.csv

		cat ${threads}-data-O2-${size}_metrics_threads.csv >> data_metrics_threads_header.csv
                mv data_metrics_threads_header.csv ${threads}-data-O2-${size}_metrics_threads.csv	

		rm data*                #Del old data
		done

	mkdir -p close_raw/$tun
        mv *raw.csv close_raw/$tun

	mkdir -p close_ctrs_threads/$tun
	#sed -i 1i"id;data_size;comp_opt;threads;label;Event;HWThread 0;" ${threads}-data-O2-${size}_ctrs_threads.csv  
        mv *ctrs_threads.csv close_ctrs_threads/$tun

	mkdir -p close_metrics_threads/$tun
        #sed -i 1i"id;data_size;comp_opt;threads;label;Event;HWThread 0;" ${threads}-data-O2-${size}_ctrs_threads.csv
        mv *metrics_threads.csv close_metrics_threads/$tun

	mkdir -p close_metrics_stats/$tun
        mv *metrics.csv close_metrics_stats/$tun

        mkdir -p close_ctrs_stats/$tun
        mv *.csv close_ctrs_stats/$tun
	done
done




#USE THIS FOR THE SPREAD CASE
export OMP_PLACES="{0},{1},{2},{3},{4},{5},{6},{7},{8},{9},{10},{11},{12},{13},{14},{15},{16},{17},{18},{19},{20},{21},{22},{23},{24},{25},{26},{27},{28},{29},{30},{31},{32},{33},{34},{35},{36},{37},{38},{39},{40},{41},{42},{43},{44},{45},{46},{47},{48},{49},{50},{51},{52},{53},{54},{55},{56},{57},{58},{59},{60},{61},{62},{63}"
export OMP_PROC_BIND=close

##Prova likwid
for tun in BRANCH #CACHE CLOCK CPI DATA DIVIDE ENERGY FLOPS_DP FLOPS_SP ICACHE L2 L3 MEM MEM_DP MEM_SP NUMA TLB
do
        echo $tun
        #Modify this to the number of cores in your system, cores instead of threads.
        #todo modify 1..64 instead
        for threads in null
        do
                echo $threads
                export OMP_NUM_THREADS=$threads

                #USE THESE SIZES FOR STANLEE
                #for size in 1024
                for size in null
                do
                        echo $size
                        export size=$size
                        echo "$tun $threads $size"
                        gcc -llikwid -lm -fopenmp -pthread -o stream-likwid stream-likwid.c -O2 -DN=$size -DNTIMES=1 -DNTHREADS=$threads -DLIKWID_PERFMON -I /lex/software/LIBRARIES/likwid-5.2.1/include -L /lex/software/LIBRARIES/likwid-5.2.1/lib;
                        for kernel  in null
                        do
				for times in null
                                do
                                likwid-perfctr -g $tun -m -o data.csv -O ./stream-likwid $kernel
                                cat data.csv >> data_raw.csv
                                cat data.csv >> data_raw_threads.csv
                                done

                                python3 likwid_environment_counters_threads.py
                                cat data_ctrs_threads.csv >> ${threads}-data-O2-${size}_ctrs_threads.csv

                                python3 likwid_environment_metrics_threads.py
                                cat data_metrics_threads.csv >> ${threads}-data-O2-${size}_metrics_threads.csv

                                rm data_raw_threads.csv
                                rm data_ctrs_threads.csv
                        done
		python3 likwid_environment_counters_stats.py
                python3 likwid_environment_metrics_stats.py

                mv data_raw.csv ${threads}-data-O2-${size}_raw.csv #Create the raw datasets

                cat ${threads}-data-O2-${size}_ctrs_threads.csv >> data_ctrs_threads_header.csv
                mv data_ctrs_threads_header.csv ${threads}-data-O2-${size}_ctrs_threads.csv

                cat ${threads}-data-O2-${size}_metrics_threads.csv >> data_metrics_threads_header.csv
                mv data_metrics_threads_header.csv ${threads}-data-O2-${size}_metrics_threads.csv

                rm data*                #Del old data
                done

	mkdir -p spread_raw/$tun
        mv *raw.csv spread_raw/$tun

	mkdir -p spread_ctrs_threads/$tun
        #sed -i 1i"id;data_size;comp_opt;threads;label;Event;HWThread 0;" ${threads}-data-O2-${size}_ctrs_threads.csv
	mv *ctrs_threads.csv spread_ctrs_threads/$tun

	mkdir -p spread_metrics_threads/$tun
        #sed -i 1i"id;data_size;comp_opt;threads;label;Event;HWThread 0;" ${threads}-data-O2-${size}_ctrs_threads.csv
        mv *metrics_threads.csv spread_metrics_threads/$tun

	mkdir -p spread_metrics_stats/$tun
        mv *metrics.csv spread_metrics_stats/$tun

        mkdir -p spread_ctrs_stats/$tun
        mv *.csv spread_ctrs_stats/$tun
        done
done

